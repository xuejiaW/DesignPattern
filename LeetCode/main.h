#include "parser.h"

// #include "1.two-sum.h"
// #include "2.add-two-numbers.h"
// #include "3.longest-substring-without-repeating-characters.h "
// #include "4.median-of-two-sorted-arrays.h"
// #include "5.longest-palindromic-substring.h"
// #include "7.reverse-integer.h"
// #include "8.string-to-integer-atoi.h"
// #include "9.palindrome-number.h"
// #include "11.container-with-most-water.h"
// #include "13.roman-to-integer.h"
// #include "14.longest-common-prefix.h"
// #include "15.3-sum.h"
// #include "16.3sum-closest.h"
// #include "17.letter-combinations-of-a-phone-number.h"
// #include "18.4-sum.h"
// #include "19.remove-nth-node-from-end-of-list.h"
// #include "20.valid-parentheses.h"
// #include "21.merge-two-sorted-lists.h"
// #include "22.generate-parentheses.h"
// #include "24.swap-nodes-in-pairs.h"
// #include "25.reverse-nodes-in-k-group.h"
// #include "26.remove-duplicates-from-sorted-array.h"
// #include "28.implement-strstr.h"
// #include "29.divide-two-integers.h"
// #include "31.next-permutation.h"
// #include "33.search-in-rotated-sorted-array.h"
// #include "34.find-first-and-last-position-of-element-in-sorted-array.h"
// #include "35.search-insert-position.h"
#include "36.valid-sudoku.h"
// #include "39.combination-sum.h"
// #include "41.first-missing-positive.h"
// #include "46.permutations.h"
// #include "48.rotate-image.h"
// #include "49.group-anagrams.h"
// #include "50.pow-x-n.h"
// #include "53.maximum-subarray.h"
// #include "54.spiral-matrix.h"
// #include "55.jump-game.h"
// #include "56.merge-interval.h"
// #include "62.unique-paths.h"
// #include "64.minimum-path-sum.h"
// #include "69.sqrtx.h"
// #include "70.climbing-stairs.h"
// #include "75.sort-colors.h"
// #include "78.subsets.h"
// #include "79.word-search.h"
// #include "86.partition-list.h"
// #include "88.merge-sorted-array.h"
// #include "92.reverse-linked-list-ii.h"
// #include "93.restore-ip-address.h"
// #include "94.binary-tree-inorder-traversal.h"
// #include "96.unique-binary-search-trees.h"
// #include "97.interleaving-string.h"
// #include "98.validate-binary-search-tree.h"
// #include "101.symmetric-tree.h"
// #include "102.binary-tree-level-order-traversal.h"
// #include "103.binary-tree-zigzag-level-order-traversal.h"
// #include "104.maximum-depth-of-binary-tree.h"
// #include "105.construct-binary-tree-from-preorder-and-inorder-traversal.h"
// #include "110.balanced-binary-tree.h"
// #include "112.path-sum.h"
// #include "113.path-sum-ii.h"
// #include "114.flatten-binary-tree-to-linked-list.h"
// #include "121.best-time-to-buy-and-sell-stock.h"
// #include "122.best-time-to-buy-and-sell-stock-ii.h"
// #include "136.single-number.h"
// #include "138.copy-list-with-random-pointer.h"
// #include "139.word-break.h"
// #include "141.linked-list-cycle.h"
// #include "142.linked-list-cycle-ii.h"
// #include "143.reorder-list.h"
// #include "144.binary-tree-preorder-traversal.h"
// #include "145.binary-tree-postorder-traversal.h"
// #include "146.lru-cache.h"
// #include "148.sort-list.h"
// #include "152.maximum-product-subarray.h"
// #include "153.find-minimum-in-rotated-sorted-array.h"
// #include "155.min-stack.h"
// #include "154.find-minimum-in-rotated-sorted-array-ii.h"
// #include "160.intersection-of-two-linked-lists.h"
// #include "164.maximum-gap.h"
// #include "167.two-sum-ii-input-array-is-sorted.h"
// #include "169.majority-element.h"
// #include "170.two-sum-iii-data-structure-design.h"
// #include "190.reverse-bits.h"
// #include "191.number-of-1-bits.h"
// #include "198.house-robber.h"
// #include "199.binary-tree-right-side-view.h"
// #include "200.number-of-islands.h"
// #include "201.bitwise-and-of-numbers-range.h"
// #include "203.remove-linked-list-elements.h"
// #include "206.reverse-linked-list.h"
// #include "207.course-schedule.h"
// #include "208.implement-trie-prefix-tree.h"
// #include "215.kth-largest-element-in-an-array.h"
// #include "217.contains-duplicate.h"
// #include "219.contains-duplicate-ii.h"
// #include "221.maximal-square.h"
// #include "224.basic-calculator.h"
// #include "226.invert-binary-tree.h"
// #include "227.basic-calculator-ii.h"
// #include "230.kth-smallest-element-in-a-bst.h"
// #include "232.implement-queue-using-stacks.h"
// #include "233.count-digit-one.h"
// #include "234.palindrome-linked-list.h"
// #include "235.lowest-common-ancestor-of-a-binary-search-tree.h"
// #include "236.lowest-common-ancestor-of-a-binary-tree.h"
// #include "239.sliding-window-maximum.h"
// #include "240.search-a-2-d-matrix-ii.h"
// #include "253.meeting-rooms-ii.h"
// #include "264.ugly-number-ii.h"
// #include "283.move-zeroes.h"
// #include "287.find-the-duplicate-number.h"
// #include "295.find-median-from-data-stream.h"
// #include "300.longest-increasing-subsequence.h"
// #include "322.coin-change.h"
// #include "343.integer-break.h"
// #include "347.top-k-frequent-elements.h "
// #include "384.shuffle-an-array.h"
// #include "394.decode-string.h"
// #include "406.queue-reconstruction-by-height.h"
// #include "438.find-all-anagrams-in-a-string.h"
// #include "442.find-all-duplicates-in-an-array.h"
// #include "445.add-two-numbers-ii.h"
// #include "460.lfu-cache.h"
// #include "470.implement-rand10-using-rand7.h"
// #include "448.find-all-numbers-disappeared-in-an-array.h"
// #include "509.fibonacci-number.h"
// #include "543.diameter-of-binary-tree.h"
// #include "560.subarray-sum-equals-k.h"
// #include "695.max-area-of-island.h"
// #include "739.daily-temperatures.h"
// #include "772.basic-calculator-iii.h"
// #include "912.sort-an-array.h"
// #include "946.validate-stack-sequences.h"
// #include "958.check-completeness-of-a-binary-tree.h "
// #include "1496.path-crossing.h"